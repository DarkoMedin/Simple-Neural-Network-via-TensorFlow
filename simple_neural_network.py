# -*- coding: utf-8 -*-
"""Simple neural network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1STS1ZESH2DM_aaBMBNlMv2dvXS71R3Gr
"""

#Import the libraries for the project
import numpy as np
from tensorflow.keras.optimizers import Adam
from sklearn.utils import shuffle
from tensorflow.keras.datasets import fashion_mnist
import matplotlib.pyplot as plt
import tensorflow as tf
import pandas  as pd

#Load Fashion MNIST  and separate train and test partitions
(tr_I, tr_L), (testI, testL)=tf.keras.datasets.fashion_mnist.load_data()

#Define classes
Fclass = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

#Shuffle the data
tr_I, tr_L=shuffle(tr_I, tr_L)
testI, testL=shuffle(testI, testL)

len(tr_I)

len(testI)

for i in range (20):
  plt.figure(figsize=(15,15))
  plt.subplot(5,5,i+1)
  plt.imshow(tr_I[i+100], cmap=plt.get_cmap("gray"))
  plt.show()

#Normalize the data to a scale from 0 to 1
tr_I, testI=tr_I/np.max(tr_I), testI/np.max(testI)

#Reshape the data into 4 dimentions needed for Conv2D layers
tr_I=tr_I.reshape(-1,28,28,1)
testI=testI.reshape(-1,28,28,1)

model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(24, (2,2),padding='same', 
                           activation='relu', 
                           input_shape=(28, 28, 1)),
    tf.keras.layers.Conv2D(28, (2,2),padding='same', 
                           activation='relu'),                        
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(10, activation='softmax')])

model.summary()

model.compile(
    optimizer=Adam(learning_rate=0.00015),
    loss='sparse_categorical_crossentropy' ,
    metrics=['accuracy']
)

model.fit(x=tr_I, y=tr_L, epochs=20,
           validation_split=0.22, verbose=2, shuffle=True)

model.evaluate(testI, testL)